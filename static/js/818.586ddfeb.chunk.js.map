{"version":3,"file":"static/js/818.586ddfeb.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/TeachersCard/TeachersCard.module.css?9ce0","webpack://react-homework-template/./src/components/ReadMoreCard/ReadMoreCard.module.css?401d","components/ReadMoreCard/ReadMoreCard.jsx","webpack://react-homework-template/./src/components/BookTrialForm/BookTrialForm.module.css?e25f","components/BookTrialForm/BookTrialForm.jsx","components/TeachersCard/TeachersCard.jsx","webpack://react-homework-template/./src/pages/FavoritePage/FavoritePage.module.css?63f5","pages/FavoritePage/FavoritePage.jsx","redux/teachers/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"TeachersCard_card__BInJP\",\"avatarWrap\":\"TeachersCard_avatarWrap__UF-OU\",\"avatar\":\"TeachersCard_avatar__3pTPQ\",\"statusWrap\":\"TeachersCard_statusWrap__nSyCO\",\"statList\":\"TeachersCard_statList__PFEet\",\"statItem\":\"TeachersCard_statItem__mB4ZN\",\"statIconWrap\":\"TeachersCard_statIconWrap__hz1xu\",\"priceSpan\":\"TeachersCard_priceSpan__IykNC\",\"favoriteWrap\":\"TeachersCard_favoriteWrap__GDdon\",\"iconFav\":\"TeachersCard_iconFav__5Ig1F\",\"iconFavActive\":\"TeachersCard_iconFavActive__4Hk7W\",\"nameTitle\":\"TeachersCard_nameTitle__VydVu\",\"descSpan\":\"TeachersCard_descSpan__QmXCb\",\"descList\":\"TeachersCard_descList__xJ1oj\",\"descItem\":\"TeachersCard_descItem__lW6AH\",\"moreButton\":\"TeachersCard_moreButton__rXhg3\",\"levelList\":\"TeachersCard_levelList__7g2k3\",\"levelItem\":\"TeachersCard_levelItem__J7Uhf\",\"buttonBook\":\"TeachersCard_buttonBook__ZfEBs\",\"modalContent\":\"TeachersCard_modalContent__cbGXX\",\"modal-overlay\":\"TeachersCard_modal-overlay__1h3mk\"};","// extracted by mini-css-extract-plugin\nexport default {\"exprText\":\"ReadMoreCard_exprText__s9yHe\",\"reviewsList\":\"ReadMoreCard_reviewsList__W3hhc\",\"reviewsWrap\":\"ReadMoreCard_reviewsWrap__C7Woz\",\"reviewsImg\":\"ReadMoreCard_reviewsImg__PpIWI\",\"reviewersList\":\"ReadMoreCard_reviewersList__s2qkt\",\"reviewersItem\":\"ReadMoreCard_reviewersItem__iT7fJ\",\"commentText\":\"ReadMoreCard_commentText__bCHVQ\"};","import React from 'react';\nimport reviewer from '../../images/user-icon.webp';\nimport sprite from '../../images/sprite.svg';\nimport css from './ReadMoreCard.module.css';\n\nconst ReadMoreCard = ({ experience, reviews }) => {\n  return (\n    <>\n      <p className={css.exprText}>{experience}</p>\n      <ul className={css.reviewsList}>\n        {reviews.map((review, idx) => (\n          <li key={idx} className={css.reviewsItem}>\n            <div className={css.reviewsWrap}>\n              <div className={css.imageWrap}>\n                <img\n                  className={css.reviewsImg}\n                  src={reviewer}\n                  alt=\"reviewer icon\"\n                  width={64}\n                />\n              </div>\n              <ul className={css.reviewersList}>\n                <li className={css.reviewersItem}>{review.reviewer_name}</li>\n                <li className={css.reviewersItem}>\n                  <svg width=\"16\" height=\"16\">\n                    <use href={`${sprite}#icon-star`}></use>\n                  </svg>\n                  <span className={css.reviewersSpan}>\n                    {review.reviewer_rating}\n                  </span>\n                </li>\n              </ul>\n            </div>\n            <p className={css.commentText}>{review.comment}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ReadMoreCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrap\":\"BookTrialForm_formWrap__9rvee\",\"formTitle\":\"BookTrialForm_formTitle__EcRXk\",\"formText\":\"BookTrialForm_formText__Hgwj9\",\"formCloseButton\":\"BookTrialForm_formCloseButton__I9x5v\",\"teacherWrap\":\"BookTrialForm_teacherWrap__XF22E\",\"avatar\":\"BookTrialForm_avatar__ni4no\",\"teacherSpan\":\"BookTrialForm_teacherSpan__fsT2x\",\"teacherText\":\"BookTrialForm_teacherText__dtBco\",\"formSubtitle\":\"BookTrialForm_formSubtitle__DvJYr\",\"form\":\"BookTrialForm_form__786lK\",\"radioGroup\":\"BookTrialForm_radioGroup__Xqemv\",\"radioLabel\":\"BookTrialForm_radioLabel__JKDj8\",\"radioInput\":\"BookTrialForm_radioInput__TqKGK\",\"infoLabel\":\"BookTrialForm_infoLabel__Egqzm\",\"infoInput\":\"BookTrialForm_infoInput__5efDE\",\"StyledField\":\"BookTrialForm_StyledField__K-TRu\",\"submitButton\":\"BookTrialForm_submitButton__ifeDF\"};","import React from 'react';\nimport { Formik } from 'formik';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport css from './BookTrialForm.module.css';\nimport sprite from '../../images/sprite.svg';\n\nconst emailRegExp = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\nconst phoneRegExp = RegExp(\n  /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/\n);\nconst initialValues = {\n  reason: '',\n  name: '',\n  email: '',\n  number: '',\n};\n\nconst schema = Yup.object().shape({\n  reason: Yup.string().required('Please choose a reason for learning English'),\n  name: Yup.string()\n    .min(4, 'Name must be at least 4 characters')\n    .max(32, 'Name must be no more than 16 characters')\n    .required('Name is required'),\n  email: Yup.string()\n    .matches(emailRegExp, 'Enter a valid email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  number: Yup.string()\n    .required('Phone is required')\n    .matches(phoneRegExp, 'Phone number must be digits and dashes.'),\n});\n\nconst BookTrialForm = ({ onClose, card }) => {\n  const { avatar_url, name, surname } = card;\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log('Form values:', values);\n    console.log('form log');\n    resetForm();\n    onClose();\n  };\n  return (\n    <div className={css.formWrap}>\n      <h2 className={css.formTitle}>Book trial lesson</h2>\n      <p className={css.formText}>\n        Our experienced tutor will assess your current language level, discuss\n        your learning goals, and tailor the lesson to your specific needs.\n      </p>\n      <button\n        className={css.formCloseButton}\n        type=\"button\"\n        onClick={() => onClose()}\n      >\n        <svg className={css.iconClose} width=\"20\" height=\"20\">\n          <use href={`${sprite}#x`} />\n        </svg>\n      </button>\n      <div className={css.teacherWrap}>\n        <div>\n          <img\n            className={css.avatar}\n            src={avatar_url}\n            alt=\"avatar\"\n            width={44}\n          />\n        </div>\n        <div>\n          <span className={css.teacherSpan}>Your teacher</span>\n          <p className={css.teacherText}>\n            {name} {surname}\n          </p>\n        </div>\n      </div>\n      <h3 className={css.formSubtitle}>\n        What is your main reason for learning English?\n      </h3>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form className={css.form}>\n          <div className={css.radioWrap} id=\"my-radio=group\">\n            <div\n              className={css.radioGroup}\n              role=\"group\"\n              aria-labelledby=\"my-radio-group\"\n            >\n              <label className={css.radioLabel}>\n                <Field\n                  className={css.radioInput}\n                  type=\"radio\"\n                  name=\"reason\"\n                  value=\"Career and business\"\n                />\n                Career and business\n              </label>\n              <label className={css.radioLabel}>\n                <Field\n                  className={css.radioInput}\n                  type=\"radio\"\n                  name=\"reason\"\n                  value=\"Lesson for kids\"\n                />\n                Lesson for kids\n              </label>\n              <label className={css.radioLabel}>\n                <Field\n                  className={css.radioInput}\n                  type=\"radio\"\n                  name=\"reason\"\n                  value=\"Living abroad\"\n                />\n                Living abroad\n              </label>\n              <label className={css.radioLabel}>\n                <Field\n                  className={css.radioInput}\n                  type=\"radio\"\n                  name=\"reason\"\n                  value=\"Exams and coursework\"\n                />\n                Exams and coursework\n              </label>\n              <label className={css.radioLabel}>\n                <Field\n                  className={css.radioInput}\n                  type=\"radio\"\n                  name=\"reason\"\n                  value=\"Culture, travel or hobby\"\n                />\n                Culture, travel or hobby\n              </label>\n            </div>\n          </div>\n          <label className={css.infoLabel}>\n            <Field\n              className={css.infoInput}\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Full Name\"\n            />\n            <ErrorMessage name=\"name\" component=\"p\" />\n          </label>\n          <label className={css.infoLabel}>\n            <Field\n              className={css.infoInput}\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Email\"\n            />\n            <ErrorMessage name=\"email\" component=\"p\" />\n          </label>\n          <label className={css.infoLabel}>\n            <Field\n              className={css.infoInput}\n              name=\"number\"\n              type=\"tel\"\n              placeholder=\"Phone\"\n            />\n            <ErrorMessage name=\"number\" component=\"p\" />\n          </label>\n          <button className={css.submitButton} type=\"submit\">\n            Book\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default BookTrialForm;\n","import React, { useMemo, useState } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport Modal from 'react-modal';\nimport css from './TeachersCard.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFavorites } from '../../redux/teachers/selectors';\nimport { toggleFavorite } from '../../redux/teachers/teachersSlice';\nimport ReadMoreCard from 'components/ReadMoreCard/ReadMoreCard';\nimport BookTrialForm from 'components/BookTrialForm/BookTrialForm';\n\nconst TeachersCard = ({ card }) => {\n  const [isReadMore, setIsReadMore] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const favorites = useSelector(getFavorites);\n  const dispatch = useDispatch();\n\n  const isCardFavorite = useMemo(\n    () => favorites.find(favorite => favorite.id === card.id),\n    [favorites, card.id]\n  );\n\n  const addToFavorites = () => {\n    dispatch(toggleFavorite(card));\n  };\n\n  const handleReadMore = () => {\n    setIsReadMore(true);\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n    document.body.style.overflow = 'hidden';\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    document.body.style.overflow = '';\n  };\n  return (\n    <>\n      <li className={css.card}>\n        <div className={css.avatarWrap}>\n          <div className={css.statusWrap}>\n            <svg width=\"12\" height=\"12\">\n              <use href={`${sprite}#status`}></use>\n            </svg>\n          </div>\n          <img\n            className={css.avatar}\n            src={card.avatar_url}\n            alt=\"avatar\"\n            width={30}\n          />\n        </div>\n        <div className={css.infoWrap}>\n          <div className={css.favoriteWrap}>\n            <button type=\"button\" onClick={() => addToFavorites(card.id)}>\n              <svg\n                className={\n                  isCardFavorite ? ` ${css.iconFavActive}` : css.iconFav\n                }\n                width=\"26\"\n                height=\"26\"\n              >\n                <use href={`${sprite}#icon-fav`} />\n              </svg>\n            </button>\n          </div>\n          <div className={css.statWrap}>\n            <ul className={css.statList}>\n              <li className={css.mainText}>Languages</li>\n              <div>\n                <li className={css.statItem}>\n                  <div className={css.statIconWrap}>\n                    <svg width=\"16\" height=\"16\">\n                      <use href={`${sprite}#book`}></use>\n                    </svg>\n                  </div>\n                  Lessons online\n                </li>\n                <li className={css.statItem}>\n                  Lessons done: {card.lessons_done}\n                </li>\n                <li className={css.statItem}>\n                  <div className={css.statIconWrap}>\n                    <svg width=\"16\" height=\"16\">\n                      <use href={`${sprite}#icon-star`}></use>\n                    </svg>\n                  </div>\n                  Rating: {card.rating}\n                </li>\n                <li className={css.statItem}>\n                  Price / 1 hour:\n                  <span className={css.priceSpan}> {card.price_per_hour}$</span>\n                </li>\n              </div>\n            </ul>\n          </div>\n          <h3 className={css.nameTitle}>\n            {card.name} {card.surname}\n          </h3>\n          <ul className={css.descList}>\n            <li className={css.descItem}>\n              Speaks:{' '}\n              <span className={css.descSpan}>{card.languages.join(', ')}</span>\n            </li>\n            <li className={css.descItem}>\n              Lesson Info:{' '}\n              <span className={css.descSpan}>{card.lesson_info}</span>\n            </li>\n            <li className={css.descItem}>\n              Conditions:{' '}\n              <span className={css.descSpan}>{card.conditions.join(', ')}</span>\n            </li>\n          </ul>\n          {!isReadMore && (\n            <button\n              className={css.moreButton}\n              type=\"button\"\n              onClick={handleReadMore}\n            >\n              Read more\n            </button>\n          )}\n          {isReadMore && (\n            <ReadMoreCard experience={card.experience} reviews={card.reviews} />\n          )}\n          <ul className={css.levelList}>\n            {card.levels.map((level, idx) => (\n              <li className={css.levelItem} key={idx}>\n                #{level}\n              </li>\n            ))}\n          </ul>\n          {isReadMore && (\n            <button\n              className={css.buttonBook}\n              type=\"button\"\n              onClick={openModal}\n            >\n              Book trial lesson\n            </button>\n          )}\n        </div>\n        <Modal\n          isOpen={isModalOpen}\n          className={css.modalContent}\n          overlayClassName={css.modalOverlay}\n          contentLabel=\"Modal\"\n          onRequestClose={closeModal}\n        >\n          <BookTrialForm onClose={closeModal} card={card} />\n        </Modal>\n      </li>\n    </>\n  );\n};\n\nexport default TeachersCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"FavoritePage_wrap__b4-AL\",\"wrapList\":\"FavoritePage_wrapList__IGubc\",\"favList\":\"FavoritePage_favList__RUN7L\",\"favText\":\"FavoritePage_favText__qcaCi\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getFavorites, getIsLoading } from '../../redux/teachers/selectors';\nimport TeachersCard from 'components/TeachersCard/TeachersCard';\nimport css from './FavoritePage.module.css';\nimport Loader from 'components/Loader/Loader';\n\nconst FavoritePage = () => {\n  const favorites = useSelector(getFavorites);\n  const loading = useSelector(getIsLoading);\n\n  return (\n    <div className={css.wrap}>\n      <div className={css.wrapList}>\n        {loading ? (\n          <Loader />\n        ) : favorites.length > 0 ? (\n          <ul className={css.favList}>\n            {favorites.map(favorite => (\n              <TeachersCard key={favorite.id} card={favorite} />\n            ))}\n          </ul>\n        ) : (\n          <p className={css.favText}>Nothing added yet..</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FavoritePage;\n","export const selectTeachers = state => state.teachers.teachers;\nexport const getTotal = state => state.teachers.totalTeachers;\nexport const getIsLoading = state => state.teachers.isLoading;\nexport const getError = state => state.teachers.error;\nexport const getFavorites = state => state.teachers.favorites;\nexport const getFilter = state => state.teachers.filter;\n"],"names":["_ref","experience","reviews","_jsxs","_Fragment","children","_jsx","className","css","map","review","idx","src","reviewer","alt","width","reviewer_name","height","href","concat","sprite","reviewer_rating","comment","phoneRegExp","RegExp","initialValues","reason","name","email","number","schema","Yup","shape","required","min","max","matches","onClose","card","avatar_url","surname","type","onClick","Formik","validationSchema","onSubmit","values","_ref2","resetForm","console","log","Form","id","role","Field","value","placeholder","ErrorMessage","component","_useState","useState","_useState2","_slicedToArray","isReadMore","setIsReadMore","_useState3","_useState4","isModalOpen","setIsModalOpen","favorites","useSelector","getFavorites","dispatch","useDispatch","isCardFavorite","useMemo","find","favorite","closeModal","document","body","style","overflow","toggleFavorite","lessons_done","rating","price_per_hour","languages","join","lesson_info","conditions","ReadMoreCard","levels","level","Modal","isOpen","overlayClassName","contentLabel","onRequestClose","BookTrialForm","loading","getIsLoading","Loader","length","TeachersCard","selectTeachers","state","teachers","getTotal","totalTeachers","isLoading","getFilter","filter"],"sourceRoot":""}